#!/bin/bash
# Usage: scan_perpage <imagefile>
#   where imagefile is the data just scanned
# (specify this script to scanadf via -S)

usage()
{
  echo "Usage: $0 <imagefile>"
  echo "Set the following environment variables:"
  echo "  unpaper"
  echo "  searchable"
  echo "  language"
  echo "  resolution"
  echo "  pgwidthin"
  echo "  pgheightin"
  echo "  skip_empty_pages"
  echo "  PS2PDF_OPTS (optional)"
  echo "  verbose (optional)"
  echo "  LOCKFILE (required if verbose=1)"
}

log()
{
  if [ $verbose = 1 ]; then
    echo "scan_perpage: $1"
  fi
}

logstdout()
{
  if [ $verbose = 1 ]; then
    cat
  else
    cat > /dev/null
  fi
}

if [ $# -lt 1 ]; then
  usage
  exit 1
fi

if [ "$unpaper" == "" -o "$searchable" == "" -o "$resolution" == "" -o "$resolution" == "" -o "$skip_empty_pages" == "" ]; then
  usage
  exit 1
fi

IMAGE_PATH=$1
IMAGE_DIR=$(dirname $1)
IMAGE_FILE=$(basename $1)

process_page() {
  log ""
  log "-------------------------------------------------------------------------------"
  log "Post-processing scanned page ${IMAGE_FILE}, deskew=$unpaper, searchable=$searchable..."

  
  [[ $skip_empty_pages -eq 1 ]] && PERCENTAGE_WHITE=$(convert "$IMAGE_PATH" -fuzz 0% -negate -threshold 0 -negate -format "%[fx:100*mean]" info:) || PERCENTAGE_WHITE=0
  log "$IMAGE_PATH has $PERCENTAGE_WHITE % white"
    
  PP_PREFIX=
  if (( $(echo "$PERCENTAGE_WHITE < 99.8" |bc -l) )); then
    if [ $unpaper -eq 1 ]; then
      log "Applying unpaper post-processing to image data..."
      PP_PREFIX="unpaper-"
      if [ $verbose = 1 ]; then
        unpaperverbose="-v"
      fi
      #unpaper $unpaperverbose --no-mask-scan --overwrite --dpi $resolution --no-blackfilter $IMAGE_FILE $PP_PREFIX$IMAGE_FILE | logstdout
      unpaper $unpaperverbose --overwrite --dpi $resolution $IMAGE_PATH $IMAGE_DIR/$PP_PREFIX$IMAGE_FILE | logstdout
    fi
    log ""
    log "-------------------------------------------------------------------------------"
    if [ $searchable -eq 1 ]; then
      log "Converting image data to searchable pdf..."
      tesseract $IMAGE_DIR/$PP_PREFIX$IMAGE_FILE $IMAGE_DIR/${IMAGE_FILE%.*} -l $language pdf | logstdout
    else
      log "Converting image data to pdf..."
      PNMverbose=
      if [ $verbose = 1 ]; then
        PNMverbose="-verbose"
      fi
      if [ "$pgwidthin" == "" -o "$pgheightin" == "" ]; then
        PAGEOPTS="-equalpixels -dpi=$resolution -noturn"
      else
        PAGEOPTS="-imagewidth $pgwidthin -imageheight $pgheightin"
      fi
      log "Using page options: $PAGEOPTS"
      pnmtops $PNMverbose $PAGEOPTS $IMAGE_DIR/$PP_PREFIX$IMAGE_FILE | ps2pdf $PS2PDF_OPTS - > $IMAGE_DIR/${IMAGE_FILE%.*}.pdf | logstdout
    fi    
  else
    log "Skipping empty page $IMAGE_FILE with white percentage $PERCENTAGE_WHITE"
  fi
  
  status=$?
  rm $IMAGE_PATH
  if [ -f $IMAGE_DIR/$PP_PREFIX$IMAGE_FILE ]; then
    rm $IMAGE_DIR/$PP_PREFIX$IMAGE_FILE
  fi

  log ""
  log "Scan processing done, status = $status"
}

if [ $verbose = 1 ]; then
  (
    flock 200
    process_page
  ) 200>$LOCKFILE
else
  process_page
fi;

exit $status
